//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechStore
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;

    /// <summary>
    /// Klasa VrstaArtikla.
    /// </summary>
    public partial class VrstaArtikla
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public VrstaArtikla()
        {
            this.Artikl = new HashSet<Artikl>();
        }
    
        public int ID { get; set; }
        public string Naziv { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Artikl> Artikl { get; set; }

        /// <summary>
        /// Dohvaæa sve vrste artikala iz baze i vraæa ih u obliku liste.
        /// </summary>
        /// <returns>Lista vrsta artikala.</returns>
        public static BindingList<VrstaArtikla> DohvatiVrsteArtikala()
        {
            BindingList<VrstaArtikla> vrstaArtikala = null;
            using (TechStoreEntities db = new TechStoreEntities())
            {
                vrstaArtikala = new BindingList<VrstaArtikla>(db.VrstaArtikla.ToList());
            }

            return vrstaArtikala;
        }

        /// <summary>
        /// Statièka metoda koja kao argument prima novu vrstu artikala te
        /// ju sprema u bazu podataka.
        /// </summary>
        /// <param name="novaVrstaArtikla"></param>
        public static void DodajVrstuArtikla(VrstaArtikla novaVrstaArtikla) {
            using (var db= new TechStoreEntities())
            {
                db.VrstaArtikla.Add(novaVrstaArtikla);
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Statièka metoda koja kao argument prima postojeæu vrstu artikla te
        /// ju briše iz baze podataka.
        /// </summary>
        /// <param name="vrstaArtiklaZaBrisanje"></param>
        public static void ObrisiVrstuArtikla(VrstaArtikla vrstaArtiklaZaBrisanje)
        {
            using (var db= new TechStoreEntities())
            {
                db.VrstaArtikla.Attach(vrstaArtiklaZaBrisanje);
                db.VrstaArtikla.Remove(vrstaArtiklaZaBrisanje);
                db.SaveChanges();
            }
        }

        /// <summary>
        /// Statièka metoda koja kao argument prima postojeæu vrstu artikla i
        /// Naziv koji je tipa string. Metoda ažurira atribut naziv proslijeðene
        /// vrste artikla i sprema u bazu podataka.
        /// </summary>
        /// <param name="vrstaArtiklaZaIzmjenu"></param>
        /// <param name="naziv"></param>
        public static void IzmjenaVrsteArtikla(VrstaArtikla vrstaArtiklaZaIzmjenu, string naziv) {
            using (var db= new TechStoreEntities())
            {
                db.VrstaArtikla.Attach(vrstaArtiklaZaIzmjenu);
                vrstaArtiklaZaIzmjenu.Naziv = naziv;
                db.SaveChanges();
            }
        }
    }
}
