//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechStore
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Linq;

    /// <summary>
    /// Klasa zaposlenik.
    /// </summary>
    public partial class Zaposlenik
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Zaposlenik()
        {
            this.StanjeDokumenta = new HashSet<StanjeDokumenta>();
        }
    
        public int ID { get; set; }
        public string Ime { get; set; }
        public string Prezime { get; set; }
        public string Korisnicko_ime { get; set; }
        public string Lozinka { get; set; }
        public string Email { get; set; }
        public string Kontakt { get; set; }
        public string Drzava { get; set; }
        public string Grad { get; set; }
        public string Ulica { get; set; }
        public string Broj { get; set; }
        public int Tip_ID { get; set; }
        public int Poslovnica_ID { get; set; }
        public static Zaposlenik PrijavljeniZaposlenik { get; set; }
    
        public virtual Poslovnica Poslovnica { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<StanjeDokumenta> StanjeDokumenta { get; set; }
        public virtual TipZaposlenika TipZaposlenika { get; set; }

        /// <summary>
        /// Dohvaæa sve zaposlenike iz baze.
        /// </summary>
        /// <returns>Vraæa listu zaposlenika.</returns>
        public static BindingList<Zaposlenik> DohvatiSveZaposlenike()
        {
            BindingList<Zaposlenik> zaposlenici = null;
            using (TechStoreEntities db = new TechStoreEntities())
            {
                zaposlenici = new BindingList<Zaposlenik>(db.Zaposlenik.ToList());
            }

            return zaposlenici;
        }

        /// <summary>
        /// Dohvaæa jednog zaposlenika iz baze na temelju proslijeðenih parametara.
        /// </summary>
        /// <param name="korisnickoIme">Upisano korisnièko ime.</param>
        /// <param name="lozinka">Upisana lozinka.</param>
        /// <returns>Ukoliko postoji zaposlenik s proslijeðenim korisnièkim imenom i lozinkom,
        /// vraæa zaposlenika, inaèe vraæa null.</returns>
        public static Zaposlenik DohvatiZaposlenika(string korisnickoIme, string lozinka)
        {
            Zaposlenik zaposlenik = null;
            using (TechStoreEntities db = new TechStoreEntities())
            {
                zaposlenik = (from z in db.Zaposlenik where z.Korisnicko_ime == korisnickoIme && z.Lozinka == lozinka select z).FirstOrDefault();
            }

            return zaposlenik;
        }

        /// <summary>
        /// Statièka metoda koja dodaje proslijeðenog zaposlenika u bazu i sprema
        /// napravljene promjene u bazu podataka.
        /// </summary>
        /// <param name="zaposlenik">Zaposlenik koji se dodaje u bazu podataka.</param>
        public static void DodajZaposlenika(Zaposlenik zaposlenik)
        {
            using (TechStoreEntities db = new TechStoreEntities())
            {
                db.Zaposlenik.Add(zaposlenik);
                db.SaveChanges();
            }
        }

    }
}
